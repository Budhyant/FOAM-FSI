/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.2                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.01;//dimensions in meters --> conversion 1

vertices
(
    (0 0 0) //0
    (4.5 0 0) //1
    (5.5 0 0) //2
    (9.5 0 0) //3
    (13 0 0) //4
    (19.5 0 0) //5

    (19.5 2 0) //6
    (19.5 5.5 0) //7
    (19.5 5.97 0) //8
    (19.5 6.03 0) //9
    (19.5 6.5 0) //10
    (19.5 10 0) //11

    (19.5 12 0) //12
    (13 12 0) //13
    (9.5 12 0) //14
    (5.5 12 0) //15
    (4.5 12 0) //16
    (0 12 0) //17

    (0 10 0) //18
    (0 6.5 0) //19
    (0 5.5 0) //20
    (0 2 0) //21

    (4.5 10 0) //22
    (5.5 10 0) //23
    (9.5 10 0) //24
    (13 10 0) //25

    (4.5 6.5 0) //26
    (5.5 6.5 0) //27
    (9.5 6.5 0) //28
    (13 6.5 0) //29

    (5.5 6.03 0) //30
    (9.5 6.03 0) //31
    (13 6.03 0) //32

    (5.5 5.97 0) //33
    (9.5 5.97 0) //34
    (13 5.97 0) //35

    (4.5 5.5 0) //36
    (5.5 5.5 0) //37
    (9.5 5.5 0) //38
    (13 5.5 0) //39

    (4.5 2 0) //40
    (5.5 2 0) //41
    (9.5 2 0) //42
    (13 2 0) //43

    (0 0 1) //44 <== 0
    (4.5 0 1) //45 <== 1
    (5.5 0 1) //46 <== 2
    (9.5 0 1) //47 <== 3
    (13 0 1) //48 <== 4
    (19.5 0 1) //49 <== 5

    (19.5 2 1) //50 <== 6
    (19.5 5.5 1) //51 <== 7
    (19.5 5.97 1) //52 <== 8
    (19.5 6.03 1) //53 <== 9
    (19.5 6.5 1) //54 <== 10
    (19.5 10 1) //55 <== 11

    (19.5 12 1) //56 <== 12
    (13 12 1) //57 <== 13
    (9.5 12 1) //58 <== 14
    (5.5 12 1) //59 <== 15
    (4.5 12 1) //60 <== 16
    (0 12 1) //61 <== 17

    (0 10 1) //62 <== 18
    (0 6.5 1) //63 <== 19
    (0 5.5 1) //64 <== 20
    (0 2 1) //65 <== 21

    (4.5 10 1) //66 <== 22
    (5.5 10 1) //67 <== 23
    (9.5 10 1) //68 <== 24
    (13 10 1) //69 <== 25

    (4.5 6.5 1) //70 <== 26
    (5.5 6.5 1) //71 <== 27
    (9.5 6.5 1) //72 <== 28
    (13 6.5 1) //73 <== 29

    (5.5 6.03 1) //74 <== 30
    (9.5 6.03 1) //75 <== 31
    (13 6.03 1) //76 <== 32

    (5.5 5.97 1) //77 <== 33
    (9.5 5.97 1) //78 <== 34
    (13 5.97 1) //79 <== 35

    (4.5 5.5 1) //80 <== 36
    (5.5 5.5 1) //81 <== 37
    (9.5 5.5 1) //82 <== 38
    (13 5.5 1) //83 <== 39

    (4.5 2 1) //84 <== 40
    (5.5 2 1) //85 <== 41
    (9.5 2 1) //86 <== 42
    (13 2 1) //87 <== 43

);

blocks
(
    hex (0 1 40 21 44 45 84 65) (24 30 1) simpleGrading (1 1 1) //1
    hex (1 2 41 40 45 46 85 84) (30 30 1) simpleGrading (1 1 1) //2
    hex (2 3 42 41 46 47 86 85) (60 30 1) simpleGrading (1 1 1) //3
    hex (3 4 43 42 47 48 87 86) (70 30 1) simpleGrading (1 1 1) //4
    hex (4 5 6 43 48 49 50 87) (50 30 1) simpleGrading (1 1 1) //5

    hex (43 6 7 39 87 50 51 83) (50 30 1) simpleGrading (1 1 1) //6
    hex (42 43 39 38 86 87 83 82) (70 30 1) simpleGrading (1 1 1) //7
    hex (41 42 38 37 85 86 82 81) (60 30 1) simpleGrading (1 1 1) //8
    hex (40 41 37 36 84 85 81 80) (30 30 1) simpleGrading (1 1 1) //9
    hex (21 40 36 20 65 84 80 64) (24 30 1) simpleGrading (1 1 1) //10

    hex (20 36 26 19 64 80 70 63) (24 10 1) simpleGrading (1 1 1) //11
    hex (37 38 34 33 81 82 78 77) (60 10 1) simpleGrading (1 1 1) //12
    hex (38 39 35 34 82 83 79 78) (70 10 1) simpleGrading (1 1 1) //13
    hex (39 7 8 35 83 51 52 79) (50 10 1) simpleGrading (1 1 1) //14
    hex (35 8 9 32 79 52 53 76) (50 10 1) simpleGrading (1 1 1) //15
    hex (34 35 32 31 78 79 76 75) (70 10 1) simpleGrading (1 1 1) //16
    hex (30 31 28 27 74 75 72 71) (60 10 1) simpleGrading (1 1 1) //17
    hex (31 32 29 28 75 76 73 72) (70 10 1) simpleGrading (1 1 1) //18
    hex (32 9 10 29 76 53 54 73) (50 10 1) simpleGrading (1 1 1) //19

    hex (29 10 11 25 73 54 55 69) (50 30 1) simpleGrading (1 1 1) //20
    hex (28 29 25 24 72 73 69 68) (70 30 1) simpleGrading (1 1 1) //21
    hex (27 28 24 23 71 72 68 67) (60 30 1) simpleGrading (1 1 1) //22
    hex (26 27 23 22 70 71 67 66) (30 30 1) simpleGrading (1 1 1) //23
    hex (19 26 22 18 63 70 66 62) (24 30 1) simpleGrading (1 1 1) //24

    hex (18 22 16 17 62 66 60 61) (24 26 1) simpleGrading (1 1 1) //25
    hex (22 23 15 16 66 67 59 60) (30 26 1) simpleGrading (1 1 1) //26
    hex (23 24 14 15 67 68 58 59) (60 26 1) simpleGrading (1 1 1) //27
    hex (24 25 13 14 68 69 57 58) (70 26 1) simpleGrading (1 1 1) //28
    hex (25 11 12 13 69 55 56 57) (50 26 1) simpleGrading (1 1 1) //29


);

edges
(
);

patches
(

    patch inlet //left
        (
           (17 61 62 18)
           (18 62 63 19)
           (19 63 64 20)
           (20 64 65 21)
           (21 65 44 0)
        )

    patch outlet //right
        (
            (12 56 55 11)
            (11 55 54 10)
            (10 54 53 9)
	    (9 53 52 8)
	    (8 52 51 7)
            (7 51 50 6)
            (6 50 49 5)
        )


    patch top //up
        (

            (17 61 60 16)
            (16 60 59 15)
            (15 59 58 14)
            (14 58 57 13)
            (13 57 56 12)

        )

    patch bottom //down
        (

            (0 44 45 1)
            (1 45 46 2)
            (2 46 47 3)
            (3 47 48 4)
            (4 48 49 5)

        )

    patch square //solid
        (
            (26 70 71 27)
            (27 71 74 30)
            (33 77 81 37)
            (37 81 80 36)
            (36 80 70 26)
        )


  patch plate //solid
        (
            (30 74 75 31)
            (31 75 78 34)
            (34 78 77 33)
        )

  empty frontAndBackPlanes //ahead behind
        (

            (0 1 40 21) //Block 1 front
            (1 2 41 40) //Block 2 front
            (2 3 42 41) //Block 3 front
            (3 4 43 42) //Block 4 front
            (4 5 6 43) //Block 5 front
            (43 6 7 39) //Block 6 front
            (42 43 39 38) //Block 7 front
            (41 42 38 37) //Block 8 front
            (40 41 37 36) //Block 9 front
            (21 40 36 20) //Block 10 front
            (20 36 26 19) //Block 11 front
            (37 38 34 33) //Block 12 front
            (38 39 35 34) //Block 13 front
            (39 7 8 35) //Block 14 front
            (35 8 9 32) //Block 15 front
            (34 35 32 31) //Block 16 front
            (30 31 28 27) //Block 17 front
            (31 32 29 28) //Block 18 front
            (32 9 10 29) //Block 19 front
            (29 10 11 25) //Block 20 front
            (28 29 25 24) //Block 21 front
            (27 28 24 23) //Block 22 front
            (26 27 23 22) //Block 23 front
            (19 26 22 18) //Block 24 front
            (18 22 16 17) //Block 25 front
            (22 23 15 16) //Block 26 front
            (23 24 14 15) //Block 27 front
            (24 25 13 14) //Block 28 front
            (25 11 12 13) //Block 29 front

            (44 45 84 65) //Block 1 back
            (45 46 85 84) //Block 2 back
            (46 47 86 85) //Block 3 back
            (47 48 87 86) //Block 4 back
            (48 49 50 87) //Block 5 back
            (87 50 51 83) //Block 6 back
            (86 87 83 82) //Block 7 back
            (85 86 82 81) //Block 8 back
            (84 85 81 80) //Block 9 back
            (65 84 80 64) //Block 10 back
            (64 80 70 63) //Block 11 back
            (81 82 78 77) //Block 12 back
            (82 83 79 78) //Block 13 back
            (83 51 52 79) //Block 14 back
            (79 52 53 76) //Block 15 back
            (78 79 76 75) //Block 16 back
            (74 75 72 71) //Block 17 back
            (75 76 73 72) //Block 18 back
            (76 53 54 73) //Block 19 back
            (73 54 55 69) //Block 20 back
            (72 73 69 68) //Block 21 back
            (71 72 68 67) //Block 22 back
            (70 71 67 66) //Block 23 back
            (63 70 66 62) //Block 24 back
            (62 66 60 61) //Block 25 back
            (66 67 59 60) //Block 26 back
            (67 68 58 59) //Block 27 back
            (68 69 57 58) //Block 28 back
            (69 55 56 57) //Block 29 back

       )
);

mergePatchPairs
(
);

// ************************************************************************* //
